#############################################################################################
###--- Setup Environment -------------------------------------------------------------------#
###############################################           #
# require libs for setup          #EEEE n   n v       v rrrr    m     m   ttttt #           #
require(raster)                   #E    nn  n  v     v  r   r  m m   m m    t   #           #
require(envimaR)                  #EE   n n n   v   v   rrrr   m m   m m    t   #           #
require(link2GI)                  #E    n  nn    v v    r  r  m   m m   m   t   #           #
#EEEE n   n     v     r   r m    m    m   t   #           #
###############################################           #
#
# define needed libs and src folder                                                         #
libs = c("link2GI")
pathdir = "repo/src/"
#set root folder for uniPC or laptop                                                        #
root_folder = alternativeEnvi(root_folder = "~/edu/Envimaster-Geomorph",                    #
alt_env_id = "COMPUTERNAME",                                  #
alt_env_value = "PCRZP",                                      #
alt_env_root_folder = "F:/edu/Envimaster-Geomorph")           #
#source environment script                                                                  #
source(file.path(root_folder, paste0(pathdir,"001_setup_geomorph_withSAGA_v1.R")))
#############################################################################################
###--- Setup Environment -------------------------------------------------------------------#
###############################################           #
# require libs for setup          #EEEE n   n v       v rrrr    m     m   ttttt #           #
require(raster)                   #E    nn  n  v     v  r   r  m m   m m    t   #           #
require(envimaR)                  #EE   n n n   v   v   rrrr   m m   m m    t   #           #
require(link2GI)                  #E    n  nn    v v    r  r  m   m m   m   t   #           #
#EEEE n   n     v     r   r m    m    m   t   #           #
###############################################           #
#
# define needed libs and src folder                                                         #
libs = c("link2GI")
pathdir = "repo/src/"
#set root folder for uniPC or laptop                                                        #
root_folder = alternativeEnvi(root_folder = "~/edu/Envimaster-Geomorph",                    #
alt_env_id = "COMPUTERNAME",                                  #
alt_env_value = "PCRZP",                                      #
alt_env_root_folder = "F:/edu/Envimaster-Geomorph")           #
#source environment script                                                                  #
source(file.path(root_folder, paste0(pathdir,"001_setup_geomorph_withSAGA_v1.R")))
#############################################################################################
###--- Setup Environment -------------------------------------------------------------------#
###############################################           #
# require libs for setup          #EEEE n   n v       v rrrr    m     m   ttttt #           #
require(raster)                   #E    nn  n  v     v  r   r  m m   m m    t   #           #
require(envimaR)                  #EE   n n n   v   v   rrrr   m m   m m    t   #           #
require(link2GI)                  #E    n  nn    v v    r  r  m   m m   m   t   #           #
#EEEE n   n     v     r   r m    m    m   t   #           #
###############################################           #
#
# define needed libs and src folder                                                         #
libs = c("link2GI","spatialEco","mapview", "rgdal", "doParallel","parallel" )
pathdir = "repo/src/"
#set root folder for uniPC or laptop                                                        #
root_folder = alternativeEnvi(root_folder = "~/edu/Envimaster-Geomorph",                    #
alt_env_id = "COMPUTERNAME",                                  #
alt_env_value = "PCRZP",                                      #
alt_env_root_folder = "F:/edu/Envimaster-Geomorph")           #
#source environment script                                                                  #
source(file.path(root_folder, paste0(pathdir,"001_setup_geomorph_v1.R")))
dem <- raster::raster(file.path(envrmt$path_001_org, "DEM_mof.tif"))
slope <- terrain(dem, opt="slope")
aspect <- terrain(dem, opt='aspect')
tpi <- terrain(dem, opt = 'TPI')
tri <- terrain(dem, opt = 'TRI')
rough <- terrain(dem, opt = 'roughness')
flow <- terrain(dem, opt = 'flowdir')
hill <- hillShade(slope, aspect,
angle=40,
direction=170)
hill <- hillShade(slope, aspect,
angle=60,
direction=170)
plot(hill,col=grey.colors(100, start=0, end=1),legend=F)
#write raster
writeRaster(slope, filename= file.path(envrmt$path_002_processed, "slope.tif"), format="GTiff", overwrite=TRUE)
writeRaster(aspect, filename= file.path(envrmt$path_002_processed, "aspect.tif"), format="GTiff", overwrite=TRUE)
writeRaster(tpi, filename= file.path(envrmt$path_002_processed, "tpi.tif"), format="GTiff", overwrite=TRUE)
writeRaster(tri, filename= file.path(envrmt$path_002_processed, "tri.tif"), format="GTiff", overwrite=TRUE)
writeRaster(rough, filename= file.path(envrmt$path_002_processed, "rough.tif"), format="GTiff", overwrite=TRUE)
writeRaster(flow, filename= file.path(envrmt$path_002_processed, "flow.tif"), format="GTiff", overwrite=TRUE)
writeRaster(hill, filename= file.path(envrmt$path_002_processed, "hill.tif"), format="GTiff", overwrite=TRUE)
tpiw <- function(x, w=5) {
m <- matrix(1/(w^2-1), nc=w, nr=w)
m[ceiling(0.5 * length(m))] <- 0
f <- focal(x, m)
x - f
}
tpi5 <- tpiw(dem, w=5)
tpi9 <- tpiw(dem, w=9)
tpi31 <- tpiw(dem, w=31)
tpi61 <- tpiw(dem, w=61)
tpi91 <- tpiw(dem, w=91)
#plot tpi's
plot(tpi5,col=grey.colors(100, start=0, end=1),legend=F)
plot(tpi9,col=grey.colors(100, start=0, end=1),legend=F)
plot(tpi31,col=grey.colors(100, start=0, end=1),legend=F)
plot(tpi61,col=grey.colors(100, start=0, end=1),legend=F)
plot(tpi91,col=grey.colors(100, start=0, end=1),legend=F)
#write raster
writeRaster(tpi5, filename= file.path(envrmt$path_002_processed, "tpi5.tif"), format="GTiff", overwrite=TRUE)
writeRaster(tpi9, filename= file.path(envrmt$path_002_processed, "tpi9.tif"), format="GTiff", overwrite=TRUE)
writeRaster(tpi31, filename= file.path(envrmt$path_002_processed, "tpi31.tif"), format="GTiff", overwrite=TRUE)
writeRaster(tpi61, filename= file.path(envrmt$path_002_processed, "tpi61.tif"), format="GTiff", overwrite=TRUE)
writeRaster(tpi91, filename= file.path(envrmt$path_002_processed, "tpi91.tif"), format="GTiff", overwrite=TRUE)
source(file.path(root_folder, file.path(pathdir,"Cenith_V2/000_cenith_v2.R")))
source(file.path(root_folder, file.path(pathdir,"Cenith_V2/cenith_tiles.R")))
source(file.path(root_folder, file.path(pathdir,"Cenith_V2/cenith_tp_v2.R")))
source(file.path(root_folder, file.path(pathdir,"Cenith_V2/cenith_seg_tiles.R")))
source(file.path(root_folder, file.path(pathdir,"Cenith_V2/cenith_merge.R")))
source(file.path(root_folder, file.path(pathdir,"Cenith_V2/cenith_seg_v1.R")))
tpi <- raster::raster(file.path(envrmt$path_002_processed, "tpi91.tif"))
cl =  makeCluster(detectCores()-1)
registerDoParallel(cl)
test1 <- Cenith(chm=tpi,h=-5,a=0.01,b=0.8, ntx = 2, nty = 2)
test1 <- Cenith(chm=tpi,h= -5,a=0.01,b=0.8, ntx = 2, nty = 2)
test1 <- Cenith(chm=tpi,h=0,a=0.01,b=0.8, ntx = 2, nty = 2)
test1 <- Cenith(chm=tpi,h=0.1,a=0.01,b=0.8, ntx = 2, nty = 2)
test1 <- Cenith(chm=tpi,h=0.1,a=0.01,b=0.8, ntx = 4, nty = 4)
tpi <- raster::raster(file.path(envrmt$path_001_org, "TPI_ex.tif"))
test1 <- Cenith(chm=tpi,h=0.1,a=0.01,b=0.8, ntx = 4, nty = 4)
dem2 <- spatialEco::raster.invert(tpi)
test1 <- Cenith(chm=tpi,h=2,a=0.01,b=0.8, ntx = 4, nty = 4)
test1 <- Cenith(chm=tpi,h=2,a=0.01,b=0.8)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=0.1,a=0.01,b=0.8)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=1,a=0.01,b=0.8)
tpi <- spatialEco::raster.invert(tpi)
test1 <- Cenith(chm=tpi,h=1,a=0.01,b=0.8)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=2,a=0.01,b=0.8)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=1.5,a=0.01,b=0.8)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=1.9,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=2,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=4,a=0.01,b=0.8)
test1 <- Cenith(chm=tpi,h=0,a=0.01,b=0.8)
test1 <- Cenith(chm=tpi,h=0.5,a=0.01,b=0.8)
test1 <- Cenith(chm=tpi,h=2.5,a=0.01,b=0.8)
test1 <- Cenith(chm=tpi,h=2.2,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
tpi <- spatialEco::raster.invert(tpi)
test1 <- Cenith(chm=tpi,h=2.2,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=1,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
tpi <- raster::raster(file.path(envrmt$path_001_org, "TPI_ex.tif"))
test1 <- Cenith(chm=tpi,h=1,a=0.01,b=0.8)
test1 <- Cenith(chm=tpi,h=2,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
mapview(test1$polygon)+dem2
tpi <- raster::raster(file.path(envrmt$path_001_org, "TPI_ex.tif"))
plot(tpi)
tpi <- spatialEco::raster.invert(tpi)
test1 <- Cenith(chm=tpi,h=2,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=1,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=1.5,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
test1 <- Cenith(chm=tpi,h=1.2,a=0.01,b=0.8)
stopCluster(cl)
mapview(test1$tp)+dem2
abs(tpi)
tpi
abs(tpi$TPI_ex)
tpi
tpi2 <-abs(tpi$TPI_ex)
tpi2
test1 <- Cenith(chm=tpi2,h=1.2,a=0.01,b=0.8)
mapview(test1$tp)+dem2
